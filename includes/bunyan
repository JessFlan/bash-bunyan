#!/usr/bin/env bash

version='0.1.0'

__bunyanName=`basename $0`
__bunyanHost=`hostname`
__bunyanLevel=30 # info

declare -A bunyanFields
bunyanFields[name]+=`basename $0`
bunyanFields[hostname]+=`hostname`

function __bunyan() {
  # arg 1 is LEVEL
  # arg 2 is MSG
  now=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  level=$1
  shift

  extra=""
  for i in "${!bunyanFields[@]}"; do
      extra+=$(printf \"%s\":\"%s\", $i ${bunyanFields[$i]})
  done ;
  printf "{$extra \"pid\":%s,\"level\":%d,\"msg\":\"%s\",\"time\":\"%s\",\"v\":0}\n" \
     "$$" "$level" "$@" "$now"

}

function __bunyanSetLevel() {
  newlevel=$1
  case "$newlevel" in
    trace)
      __bunyanLevel=10
      ;;
    debug)
      __bunyanLevel=20
      ;;
    info)
      __bunyanLevel=30
      ;;
    warn)
      __bunyanLevel=40
      ;;
    error)
      __bunyanLevel=50
      ;;
    fatal)
      __bunyanLevel=60
      ;;
    *)
      printf "unknown log level '$1'\n" >&2
      ;;
  esac
}


function trace() { 
  [[ $__bunyanLevel -le 10 ]] &&  __bunyan 10 "$@" 
}

function debug() { 
  [[ $__bunyanLevel -le 20 ]] && __bunyan 20 "$@" 
}

function info()  { 
  [[ $__bunyanLevel -le 30 ]] && __bunyan 30 "$@" 
}

function warn()  { 
  [[ $__bunyanLevel -le 40 ]] && __bunyan 40 "$@" 
}

function error() { 
  [[ $__bunyanLevel -le 50 ]] && __bunyan 50 "$@" 
}

function fatal() { 
  [[ $__bunyanLevel -le 60 ]] && __bunyan 60 "$@" 
}
